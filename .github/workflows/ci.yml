name: ci

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  cargo:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-D warnings"
    strategy:
      fail-fast: false
      matrix:
        include:
          - command: build --target wasm32-unknown-unknown --locked --all-features --all
          - command: check --locked --all
          - command: clippy --locked --all --tests -- -D warnings
          - command: fmt --all -- --check
          - command: test --locked --all
          - command: test --no-default-features --locked --all
          - command: test --all-features --locked --all
          - command: doc --all-features --locked --no-deps
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
    - uses: Swatinem/rust-cache@v2
    - run: cargo ${{ matrix.command }}

  # TODO: Update/fork this tool to provide a simpler, cargo-plugin-style CLI
  # so that it can be merged in the command table above
  cargo-toml-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    - run: cargo install --version "0.1.1" cargo-toml-lint
    - run: git ls-files | grep Cargo.toml$ | xargs --verbose -n 1 cargo-toml-lint

  publish:
    runs-on: ubuntu-latest
    needs:
      [
        cargo,
        cargo-toml-lint,
      ]
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - uses: katyo/publish-crates@v2
        id: publish-crates
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          dry-run: ${{ github.event_name != 'push' }}
          ignore-unpublished-changes: true
      - name: List published crates
        if: ${{ steps.publish-crates.outputs.published != '' }}
        run: |
          LIST="${{ join(fromJSON(steps.publish-crates.outputs.published).*.name, ', ') }}"
          echo "Published crates: $LIST"
